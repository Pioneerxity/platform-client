name: Continuous Deployment

on:
  push:
    branches: [dev, main]

env:
  DOCKER_NAMESPACE: poineerxitydev
  DOCKER_REPOSITORY: pioneerxity
  FRONTEND_IMAGE_TAG: frontend-dev
  FRONTEND_IMAGE_REPOSITORY: nextjs-frontend
  FRONTEND_CONTAINER_NAME: nextjs-app

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          username: ${{ secrets.CI_REGISTRY_USER }}
          password: ${{ secrets.CI_REGISTRY_PASSWORD }}

      - name: Build & Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          push: true
          tags: ${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_REPOSITORY }}:${{ env.FRONTEND_IMAGE_TAG }}

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push]
    steps:
      - name: Deploy to DigitalOcean
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.DO_DROPLET_HOST }}
          username: root
          key: ${{ secrets.DO_DROPLET_SSH_KEY }}
          script: |
            # ðŸ”¹ Clean up unused Docker resources before deployment
            docker system prune -af --volumes || true
            docker builder prune -af || true
  
            # ðŸ”¹ Log in to registry
            docker login -u "${{ secrets.CI_REGISTRY_USER }}" -p "${{ secrets.CI_REGISTRY_PASSWORD }}"
  
            # ðŸ”¹ Pull new images
            docker pull ${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_REPOSITORY }}:${{ env.FRONTEND_IMAGE_TAG }}
  
            # ðŸ”¹ Stop and remove old containers
            docker stop ${{ env.FRONTEND_CONTAINER_NAME }} || true
            docker rm ${{ env.FRONTEND_CONTAINER_NAME }} || true

            # ðŸ”¹ Start new frontend container
            docker run -d --name ${{ env.FRONTEND_CONTAINER_NAME }} -p 3000:3000 \
              ${{ env.DOCKER_NAMESPACE }}/${{ env.DOCKER_REPOSITORY }}:${{ env.FRONTEND_IMAGE_TAG }}
